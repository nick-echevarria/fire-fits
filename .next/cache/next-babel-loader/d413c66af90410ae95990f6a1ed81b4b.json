{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/slicknick/Development/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/slicknick/Development/Advanced-React/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div(_templateObject2());\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  // hook to import gql query\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductListStyles, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/slicknick/Development/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS_QUERY","ProductsListStyles","styled","div","Products","data","error","loading","message","allProducts","map","product"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAiBA,IAAME,kBAAkB,GAAGC,MAAM,CAACC,GAAV,oBAAxB;AAMA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AACjC;AADiC,kBAEAN,QAAQ,CAACE,kBAAD,CAFR;AAAA,MAEzBK,IAFyB,aAEzBA,IAFyB;AAAA,MAEnBC,KAFmB,aAEnBA,KAFmB;AAAA,MAEZC,OAFY,aAEZA,OAFY;;AAGjC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,iBAAD;AAAA,gBACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BACpB,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAduBP,Q;UAEWN,Q;;;KAFXM,Q","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nexport default function Products() {\n  // hook to import gql query\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductListStyles>\n        {data.allProducts.map((product) => (\n          <Product product={product} />\n        ))}\n      </ProductListStyles>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}